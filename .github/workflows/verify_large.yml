name: Verification, large

on:
  # Trigger the workflow on push or pull request
  push:
  #pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 13 * * *'
  # Trigger the workflow manually
  workflow_dispatch:

env:
  GFORTRAN_VERSION: 12
  MATLAB_RELEASE: latest

jobs:
  test:
    name: Verify PRIMA.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        solver: [newuoa, cobyla, bobyqa, uobyqa]  # With the blacklist, there is no large problem for lincoa
        #dim: [small, big, large]
        dim: [large]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.5.2
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          submodules: recursive

      - name: Clone MatCUTEst
        uses: actions/checkout@v3.5.2
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          repository: equipez/matcutest_compiled
          path: matcutest

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/link_gfortran ${{ env.GFORTRAN_VERSION }}

      - name: Check MATLAB
        id: check_matlab
        run: if type 'matlab' &> /dev/null ; then echo "::set-output name=has_matlab::true" ; fi

      - name: Set up MATLAB
        if: ${{ steps.check_matlab.outputs.has_matlab != 'true' }}
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: ${{ env.MATLAB_RELEASE }}

      - name: Conduct the test
        uses: matlab-actions/run-command@v1.1.3
        with:
          command: |
            ver;
            root_dir = pwd();

            cd(fullfile(root_dir, 'matcutest')); install(); which macup

            cd(fullfile(root_dir, 'matlab/tests'));
            options.nr = 5;
            options = struct(); if strcmp('${{ matrix.solver }}', 'lincoa'), options.nr = 1; end; options
            verify('${{ matrix.solver }}', '${{ matrix.dim }}', options);
            cd(root_dir); setup path; setup clean; setup uninstall  % Test that `setup` works properly.


      - name: Store artifacts
        uses: actions/upload-artifact@v3.1.2
        if: always()  # Always run even if the workflow is canceled manually or due to overtime.
        with:
          path: |
            /tmp/${{ matrix.solver }}_verify_prima/*start*
            /tmp/${{ matrix.solver }}_verify_prima/*end*
